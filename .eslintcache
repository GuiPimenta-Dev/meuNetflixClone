[{"C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\index.js":"1","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\App.js":"2","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\Tmdb.js":"3","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\components\\MovieRow.js":"4","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\components\\FeaturedMovie.js":"5","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\components\\Header.js":"6"},{"size":197,"mtime":1610201023284,"results":"7","hashOfConfig":"8"},{"size":2040,"mtime":1610223370940,"results":"9","hashOfConfig":"8"},{"size":2644,"mtime":1610211284505,"results":"10","hashOfConfig":"8"},{"size":1803,"mtime":1610217967296,"results":"11","hashOfConfig":"8"},{"size":1773,"mtime":1610218782610,"results":"12","hashOfConfig":"8"},{"size":588,"mtime":1610215686814,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ylihn6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\index.js",[],["31","32"],"C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\App.js",["33"],"C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\Tmdb.js",["34"],"const API_KEY='a0bcbb245c5788bb5335a3b744a533c3'\r\nconst API_BASE = 'https://api.themoviedb.org/3'\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Voce',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },           \r\n            {\r\n                slug: 'action',\r\n                title: 'Açao',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`) \r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance do Netflix',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async(movieId,type)=> {\r\n\r\n        let info={};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                default:\r\n                    info=null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;      \r\n\r\n\r\n    }\r\n}","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\components\\MovieRow.js",["35"],"import React,{useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title,items}) => {\r\n\r\n    const [scrollX,setScrollX] = useState(-400);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x>0){\r\n            x=0;\r\n        }\r\n        setScrollX(x);\r\n    };\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        \r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    };\r\n\r\n    return (\r\n    <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize:50}} />\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize:50}} />\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"movieRow--listarea\">\r\n\r\n                <div className=\"movieRow--list\" style={{ marginLeft: scrollX , width: items.results.length * 150}}>\r\n\r\n                {items.results.length > 0 && items.results.map((item,key) => (\r\n                    \r\n                    <div key={key} className=\"movieRow--item\">\r\n                    \r\n                        <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n            \r\n                    </div>\r\n            \r\n                ))}\r\n\r\n                </div>\r\n            \r\n            </div>\r\n    </div>\r\n    );\r\n    }","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\components\\FeaturedMovie.js",["36"],"import React from 'react';\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate= new Date(item.first_air_date);\r\n\r\n    let genres=[];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 200){\r\n        description = description.substring(0,200)+ '...';\r\n    }\r\n\r\n return (\r\n  <section className=\"featured\" style={{\r\n      backgroundSize: 'cover',\r\n      backgroundPosition:'center',\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n  }}>\r\n      <div className=\"featured--vertical\">\r\n            <div className=\"featured--horizontal\">\r\n                <div className=\"featured--name\">{item.original_name}</div>\r\n                <div className=\"featured--info\">\r\n                \r\n                    <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                    <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                    <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons === 1 ? '' : 's' } </div>\r\n                </div>\r\n               \r\n                <div className=\"featured--description\">{description}</div>\r\n                \r\n               \r\n                <div className=\"featured--buttons\">\r\n                    <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">Assistir</a>\r\n                    <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                </div>\r\n                <div className=\"featured--genres\"><strong>Generos: </strong> {genres.join(', ')}</div>\r\n\r\n            </div>\r\n                \r\n      </div>\r\n  </section>\r\n  );\r\n}","C:\\Users\\Administrador\\meusProjetosReact\\netflixclone\\src\\components\\Header.js",["37","38"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black})=> {\r\n return (\r\n    <header className={black ? \"black\" : ''}>\r\n        <div className=\"header--logo\">\r\n            <a href=\"/\">\r\n                <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\" alt=\"Netflix\"/>\r\n            </a>\r\n        </div>\r\n        <div className=\"header--user\">\r\n            <a href=\"/\">\r\n                <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" />\r\n            </a>\r\n        </div>\r\n    </header>  \r\n);\r\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":1,"nodeType":"45","endLine":85,"endColumn":2},{"ruleId":"43","severity":1,"message":"46","line":10,"column":1,"nodeType":"45","endLine":80,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":6,"column":1,"nodeType":"45","endLine":60,"endColumn":6},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":48,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":19,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":14,"column":17,"nodeType":"49","endLine":14,"endColumn":108},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]